{"version":3,"file":"fast-copy.cjs.js","sources":["../src/utils.js","../src/index.js"],"sourcesContent":["const {create, getOwnPropertySymbols: getSymbols, getPrototypeOf} = Object;\nconst {hasOwnProperty, propertyIsEnumerable} = Object.prototype;\n\n/**\n * @constant {Object} SUPPORTS cache of values supported\n */\nexport const SUPPORTS = {\n  FLAGS: typeof /foo/g.flags === 'string',\n  SYMBOL_PROPERTIES: typeof global.Object.getOwnPropertySymbols === 'function',\n  WEAKSET: typeof global.WeakSet === 'function',\n};\n\n/**\n * @function getNewCache\n *\n * @description\n * get a new cache object to prevent circular references\n *\n * @returns {Object|Weakset} the new cache object\n */\nexport const getNewCache = () =>\n  SUPPORTS.WEAKSET\n    ? new WeakSet()\n    : create({\n      _values: [],\n      add(value) {\n        this._values.push(value);\n      },\n      has(value) {\n        return !!~this._values.indexOf(value);\n      },\n    });\n\n/**\n * @function getObjectToCopy\n *\n * @description\n * get the object to copy, including appropriate prototype\n *\n * @param {Object} object the object to copy\n * @param {function} RealmObject the realm-specific Object constructor\n * @param {boolean} isPlainObject is the object a plain object\n * @returns {Object} an empty version of the object to copy\n */\nexport const getObjectToCopy = (object, RealmObject, isPlainObject) => {\n  if (isPlainObject) {\n    const prototype = object.__proto__ || getPrototypeOf(object);\n\n    return prototype === RealmObject.prototype ? {} : create(prototype);\n  }\n\n  return object.constructor ? new object.constructor() : create(null);\n};\n\n/**\n * @function getRegExpFlags\n *\n * @description\n * get the flags to apply to the copied regexp\n *\n * @param {RegExp} regExp the regexp to get the flags of\n * @returns {string} the flags for the regexp\n */\nexport const getRegExpFlags = (regExp) => {\n  let flags = '';\n\n  if (regExp.global) {\n    flags += 'g';\n  }\n\n  if (regExp.ignoreCase) {\n    flags += 'i';\n  }\n\n  if (regExp.multiline) {\n    flags += 'm';\n  }\n\n  if (regExp.unicode) {\n    flags += 'u';\n  }\n\n  if (regExp.sticky) {\n    flags += 'y';\n  }\n\n  return flags;\n};\n\n/**\n * @function isObjectCopyable\n *\n * @description\n * is the object able to be copied\n *\n * @param {any} object the object to test\n * @param {Object|Weakset} cache the cache of copied values\n * @returns {boolean} can the object be copied\n */\nexport const isObjectCopyable = (object, cache) => typeof object === 'object' && object !== null && !cache.has(object);\n\n/**\n * @function shouldObjectBeCopied\n *\n * @description\n * should the object be copied\n *\n * @param {any} object the object to test\n * @param {any} realm the realm to check instanceof in\n * @returns {boolean} should the object be copied\n */\nexport const shouldObjectBeCopied = (object, realm) =>\n  typeof object.then !== 'function'\n  && !(object instanceof realm.Error)\n  && !(realm.WeakMap && object instanceof realm.WeakMap)\n  && !(realm.WeakSet && object instanceof realm.WeakSet);\n\n/**\n * @function copyArray\n *\n * @description\n * copy the array, deeply copying the values\n *\n * @param {Array<any>} array the array to copy\n * @param {function} copy the function to copy values\n * @param {any} realm the realm to check instanceof in\n * @returns {Array<any>} the copied array\n */\nexport const copyArray = (array, copy, realm) => {\n  const newArray = new array.constructor();\n\n  for (let index = 0; index < array.length; index++) {\n    newArray[index] = copy(array[index], realm);\n  }\n\n  return newArray;\n};\n\n/**\n * @function copyArrayBuffer\n *\n * @description\n * copy the arrayBuffer, deeply copying the values\n *\n * @param {ArrayBuffer} arrayBuffer the arrayBuffer to copy\n * @returns {ArrayBuffer} the copied bufarrayBufferfer\n */\nexport const copyArrayBuffer = (arrayBuffer) => arrayBuffer.slice(0);\n\n/**\n * @function copyBuffer\n *\n * @description\n * copy the buffer, deeply copying the values\n *\n * @param {Buffer} buffer the buffer to copy\n * @param {any} realm the realm to check instanceof in\n * @returns {Buffer} the copied buffer\n */\nexport const copyBuffer = (buffer, realm) => {\n  const {Buffer: RealmBuffer} = realm;\n  const newBuffer = RealmBuffer.allocUnsafe ? RealmBuffer.allocUnsafe(buffer.length) : new RealmBuffer(buffer.length);\n\n  buffer.copy(newBuffer);\n\n  return newBuffer;\n};\n\n/**\n * @function copyMap\n *\n * @description\n * copy the map values into a new map\n *\n * @param {Map} map the map to copy\n * @param {function} copy the copy object method\n * @param {Object} realm the realm the constructor resides in\n * @returns {Map} the copied map\n */\nexport const copyMap = (map, copy, realm) => {\n  const newMap = new map.constructor();\n\n  map.forEach((value, key) => newMap.set(key, copy(value, realm)));\n\n  return newMap;\n};\n\n/**\n * @function copySet\n *\n * @description\n * copy the set values into a new set\n *\n * @param {Set} set the set to copy\n * @param {function} copy the copy object method\n * @param {Object} realm the realm the constructor resides in\n * @returns {Set} the copied set\n */\nexport const copySet = (set, copy, realm) => {\n  const newSet = new set.constructor();\n\n  set.forEach((value) => newSet.add(copy(value, realm)));\n\n  return newSet;\n};\n\n/**\n * @function copyObject\n *\n * @description\n * copy the object values into a new object of the same type\n *\n * @param {Object} object the object to copy\n * @param {function} copy the copy method\n * @param {any} realm the realm to check instanceof in\n * @param {boolean} isPlainObject is the object to copy a plain object\n * @returns {Object} the copied object\n */\nexport const copyObject = (object, copy, realm, isPlainObject) => {\n  const newObject = getObjectToCopy(object, realm.Object, isPlainObject);\n\n  for (let key in object) {\n    if (hasOwnProperty.call(object, key)) {\n      newObject[key] = copy(object[key], realm);\n    }\n  }\n\n  if (SUPPORTS.SYMBOL_PROPERTIES) {\n    const symbols = getSymbols(object);\n\n    if (symbols.length) {\n      for (let index = 0, symbol; index < symbols.length; index++) {\n        symbol = symbols[index];\n\n        if (propertyIsEnumerable.call(object, symbol)) {\n          newObject[symbol] = copy(object[symbol], realm);\n        }\n      }\n    }\n  }\n\n  return newObject;\n};\n\n/**\n * @function copyRegExp\n *\n * @description\n * copy the RegExp to a new RegExp with the same properties\n *\n * @param {RegExp} regExp the RegExp to copy\n * @param {function} RealmRegExp the realm-specific RegExp constructor\n * @returns {RegExp} the copied RegExp\n */\nexport const copyRegExp = (regExp, RealmRegExp) => {\n  const newRegExp = new RealmRegExp(regExp.source, SUPPORTS.FLAGS ? regExp.flags : getRegExpFlags(regExp));\n\n  newRegExp.lastIndex = regExp.lastIndex;\n\n  return newRegExp;\n};\n\n/**\n * @function copyTypedArray\n *\n * @description\n * copy the typedArray, deeply copying the values\n *\n * @param {TypedArray} typedArray the typedArray to copy\n * @returns {TypedArray} the copied typedArray\n */\nexport const copyTypedArray = (typedArray) => new typedArray.constructor(copyArrayBuffer(typedArray.buffer));\n","// utils\nimport {\n  copyArray,\n  copyArrayBuffer,\n  copyBuffer,\n  copyMap,\n  copyObject,\n  copyRegExp,\n  copySet,\n  copyTypedArray,\n  getNewCache,\n  isObjectCopyable,\n  shouldObjectBeCopied,\n} from './utils';\n\nconst {isArray} = Array;\n\n/**\n * @function copy\n *\n * @description\n * deeply copy the object to a new object of the same type\n *\n * @param {any} object the object to copy\n * @param {any} [realm=global] the realm to check instanceof in\n * @returns {any} the copied object\n */\nexport default function copy(object, realm = global) {\n  const {\n    ArrayBuffer: RealmArrayBuffer,\n    Buffer: RealmBuffer,\n    Date: RealmDate,\n    Map: RealmMap,\n    Object: RealmObject,\n    RegExp: RealmRegExp,\n    Set: RealmSet,\n  } = realm;\n\n  const cache = getNewCache();\n\n  const handleCopy = (object) => {\n    if (!isObjectCopyable(object, cache)) {\n      return object;\n    }\n\n    if (isArray(object)) {\n      cache.add(object);\n\n      return copyArray(object, handleCopy, realm);\n    }\n\n    if (object.constructor === RealmObject) {\n      cache.add(object);\n\n      return copyObject(object, handleCopy, realm, true);\n    }\n\n    if (object instanceof RealmDate) {\n      return new RealmDate(object.getTime());\n    }\n\n    if (object instanceof RealmRegExp) {\n      return copyRegExp(object, RealmRegExp);\n    }\n\n    if (RealmMap && object instanceof RealmMap) {\n      cache.add(object);\n\n      return copyMap(object, handleCopy, realm);\n    }\n\n    if (RealmSet && object instanceof RealmSet) {\n      cache.add(object);\n\n      return copySet(object, handleCopy, realm);\n    }\n\n    if (RealmBuffer && RealmBuffer.isBuffer(object)) {\n      return copyBuffer(object, realm);\n    }\n\n    if (RealmArrayBuffer) {\n      if (RealmArrayBuffer.isView(object)) {\n        return copyTypedArray(object);\n      }\n\n      if (object instanceof RealmArrayBuffer) {\n        return copyArrayBuffer(object);\n      }\n    }\n\n    if (shouldObjectBeCopied(object, realm)) {\n      cache.add(object);\n\n      return copyObject(object, handleCopy, realm);\n    }\n\n    return object;\n  };\n\n  return handleCopy(object);\n}\n"],"names":["create","Object","getSymbols","getOwnPropertySymbols","getPrototypeOf","prototype","hasOwnProperty","propertyIsEnumerable","SUPPORTS","FLAGS","flags","SYMBOL_PROPERTIES","global","WEAKSET","WeakSet","getNewCache","_values","add","value","push","has","indexOf","getObjectToCopy","object","RealmObject","isPlainObject","__proto__","constructor","getRegExpFlags","regExp","ignoreCase","multiline","unicode","sticky","isObjectCopyable","cache","shouldObjectBeCopied","realm","then","Error","WeakMap","copyArray","array","copy","newArray","index","length","copyArrayBuffer","arrayBuffer","slice","copyBuffer","buffer","RealmBuffer","Buffer","newBuffer","allocUnsafe","copyMap","map","newMap","forEach","key","set","copySet","newSet","copyObject","newObject","call","symbols","symbol","copyRegExp","RealmRegExp","newRegExp","source","lastIndex","copyTypedArray","typedArray","isArray","Array","RealmArrayBuffer","ArrayBuffer","RealmDate","Date","RealmMap","Map","RegExp","RealmSet","Set","handleCopy","getTime","isBuffer","isView"],"mappings":"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"}