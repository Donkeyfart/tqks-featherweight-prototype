(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["2d21b4b9"],{bebb:function(e,n,a){"use strict";a.r(n);var t=function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("q-page",{staticClass:"flex flex-left",attrs:{padding:!0}},[a("div",{staticStyle:{height:"400px","overflow-y":"scroll"},attrs:{id:"topbox"}},[a("h3",[e._v("Quests and Structured Conversations")]),e._v("\n    All "),a("i",[e._v("conversations")]),e._v(" in FeatherWeight are "),a("i",[e._v("structured")]),e._v(". This means that they take the shape of a \n    "),a("i",[e._v("rooted tree")]),e._v(" with possibly many tree branches. \n\n    "),a("h3",[e._v("Quests")]),e._v("\n    Here are a few of many possible ways in which Quests can be used as conversation anchors:\n    "),a("ul",[a("li",[e._v("As a periodic (e.g. daily) record of personal thoughts")]),a("li",[e._v("To pose a scenario which needs deep thinking, debate, and/or reflection")]),a("li",[e._v("To summarize ideas, discoveries, or questions which are floating about in other conversations")])]),a("h3",[e._v("Conversation Nodes")]),e._v("\n    Here, we describe each of the primary conversation node types. We will use the following image, found "),a("a",{attrs:{href:"https://eight2late.wordpress.com/2009/04/07/issues-ideas-and-arguments-a-communication-centric-approach-to-tackling-project-complexity/"}},[e._v("here")]),e._v(" \n    as a reference. When we use the term "),a("b",[e._v("parent node")]),e._v(", that refers to the node to which any conversation node "),a("i",[e._v("responds")]),e._v("."),a("br"),a("img",{staticStyle:{display:"block",margin:"0 auto"},attrs:{src:"statics/images/demomap2.jpg"}}),a("br"),a("h4",[e._v("Question")]),e._v("\n    A question node serves precisely one purpose, to ask a question. When a question is asked of a particular parent node, that question can receive one or many answers."),a("br"),a("b",[e._v("Question Etiquette")]),a("br"),a("ul",[a("li",[e._v("Use a question to ask "),a("i",[e._v("one thing")])]),a("li",[e._v("If you have several things to ask, use several questions")])]),a("h4",[e._v("Idea - Answer")]),e._v("\n    Synonyms for Answer are "),a("i",[e._v("Idea")]),e._v(", "),a("i",[e._v("Position")]),e._v(", and "),a("i",[e._v("Claim")]),e._v(".  It is appropriate to realize that while you "),a("i",[e._v("answer a question with an Answer node")]),e._v(", you can \n    also "),a("i",[e._v("answer an answer with an Answer node")]),e._v(" in which case, you are "),a("i",[e._v("refining")]),e._v(" an answer. You can chain many refinements to an answer."),a("br"),e._v("\n    An Answer node can respond to all conversation node types."),a("br"),a("b",[e._v("Answer Etiquette")]),a("br"),a("ul",[a("li",[e._v("Make one and only one answer per answer node")]),a("li",[e._v("If you have several answers, use several Answer nodes")])]),a("h4",[e._v("Pro and Con Arguments")]),e._v("\n    As the image above illustrates, use Pro and Con arguments to make statements essentially for or against a parent node. I've seen simple Con arguments which argue that the parent node\n    is "),a("i",[e._v("too vague")]),e._v("."),a("br"),a("h5",[e._v("Argument Etiquette")]),a("ul",[a("li",[e._v("As with "),a("i",[e._v("any conversation node")]),e._v(" argument nodes must be polite and respectful")]),a("li",[e._v("Make one and only one argument per node")]),a("li",[e._v("If you need to make several arguments, use one argument node for each")])])])])},s=[];t._withStripped=!0;var o=a("2877"),r={},i=Object(o["a"])(r,t,s,!1,null,null,null);i.options.__file="AboutConversations.vue";n["default"]=i.exports}}]);